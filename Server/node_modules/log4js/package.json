{
  "name": "log4js",
  "version": "2.3.3",
  "description": "Port of Log4js to work with node.",
  "homepage": "https://nomiddlename.github.io/log4js-node/",
  "keywords": [
    "logging",
    "log",
    "log4j",
    "node"
  ],
  "license": "Apache-2.0",
  "main": "./lib/log4js",
  "author": {
    "name": "Gareth Jones",
    "email": "gareth.nomiddlename@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/nomiddlename/log4js-node.git"
  },
  "bugs": {
    "url": "http://github.com/nomiddlename/log4js-node/issues"
  },
  "engines": {
    "node": ">=4.0"
  },
  "scripts": {
    "clean": "find test -type f ! -name '*.json' ! -name '*.js' ! -name '.eslintrc' -delete && rm *.log",
    "lint": "eslint lib/ test/",
    "prepush": "npm test",
    "commitmsg": "validate-commit-msg",
    "posttest": "npm run clean",
    "pretest": "eslint lib/**/*",
    "test": "tap 'test/tap/**/*.js'",
    "coverage": "tap 'test/tap/**/*.js' --cov",
    "codecov": "tap 'test/tap/**/*.js' --cov --coverage-report=lcov && codecov"
  },
  "directories": {
    "test": "test",
    "lib": "lib"
  },
  "dependencies": {
    "date-format": "^1.1.0",
    "debug": "^2.6.8",
    "semver": "^5.3.0",
    "streamroller": "^0.5.2",
    "hipchat-notifier": "^1.1.0",
    "loggly": "^1.1.0",
    "mailgun-js": "^0.7.0",
    "nodemailer": "^2.5.0",
    "redis": "^2.7.1",
    "slack-node": "~0.2.0",
    "axios": "^0.15.3"
  },
  "devDependencies": {
    "codecov": "^1.0.1",
    "conventional-changelog": "^1.1.4",
    "eslint": "^3.19.0",
    "eslint-config-airbnb-base": "^11.2.0",
    "eslint-import-resolver-node": "^0.3.1",
    "eslint-plugin-import": "^2.6.1",
    "husky": "^0.12.0",
    "nyc": "^10.3.2",
    "sandboxed-module": "^2.0.3",
    "tap": "^8.0.1",
    "validate-commit-msg": "^2.12.2"
  },
  "optionalDependencies": {
    "hipchat-notifier": "^1.1.0",
    "loggly": "^1.1.0",
    "mailgun-js": "^0.7.0",
    "nodemailer": "^2.5.0",
    "redis": "^2.7.1",
    "slack-node": "~0.2.0",
    "axios": "^0.15.3"
  },
  "browser": {
    "os": false
  },
  "config": {
    "validate-commit-msg": {
      "types": [
        "feat",
        "fix",
        "docs",
        "style",
        "refactor",
        "example",
        "perf",
        "test",
        "chore",
        "revert"
      ],
      "warnOnFail": false,
      "maxSubjectLength": 72,
      "subjectPattern": ".+",
      "subjectPatternErrorMsg": "subject does not match subject pattern!",
      "helpMessage": "\n# allowed type: feat, fix, docs, style, refactor, example, perf, test, chore, revert\n# subject no more than 50 chars\n# a body line no more than 72 chars"
    }
  },
  "nyc": {
    "all": true,
    "include": [
      "lib/**/*.js"
    ],
    "require": [
      "./test/sandbox-coverage"
    ]
  },
  "readme": "# log4js-node [![Build Status](https://secure.travis-ci.org/nomiddlename/log4js-node.png?branch=master)](http://travis-ci.org/nomiddlename/log4js-node)\n\n[![NPM](https://nodei.co/npm/log4js.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/log4js/)\n[![codecov](https://codecov.io/gh/nomiddlename/log4js-node/branch/master/graph/badge.svg)](https://codecov.io/gh/nomiddlename/log4js-node)\n\nThis is a conversion of the [log4js](https://github.com/stritti/log4js)\nframework to work with [node](http://nodejs.org). I started out just stripping out the browser-specific code and tidying up some of the javascript to work better in node. It grew from there. Although it's got a similar name to the Java library [log4j](https://logging.apache.org/log4j/2.x/), thinking that it will behave the same way will only bring you sorrow and confusion.\n\nThe full documentation is available [here](https://nomiddlename.github.io/log4js-node/).\n\nThere have been a few changes between log4js 1.x and 2.x (and 0.x too). You should probably read this [migration guide](https://nomiddlename.github.io/log4js-node/migration-guide.html) if things aren't working.\n\nOut of the box it supports the following features:\n\n* coloured console logging to stdout or stderr\n* file appender, with configurable log rolling based on file size or date\n* SMTP appender\n* GELF appender\n* Loggly appender\n* Logstash UDP appender\n* logFaces (UDP and HTTP) appender\n* multiprocess appender (useful when you've got multiple servers)\n* a logger for connect/express servers\n* configurable log message layout/patterns\n* different log levels for different log categories (make some parts of your app log as DEBUG, others only ERRORS, etc.)\n\n## installation\n\n```bash\nnpm install log4js\n```\n\n## usage\n\nMinimalist version:\n```javascript\nvar log4js = require('log4js');\nvar logger = log4js.getLogger();\nlogger.level = 'debug';\nlogger.debug(\"Some debug messages\");\n```\nBy default, log4js will not output any logs (so that it can safely be used in libraries). The `level` for the `default` category is set to `OFF`. To enable logs, set the level (as in the example). This will then output to stdout with the coloured layout (thanks to [masylum](http://github.com/masylum)), so for the above you would see:\n```bash\n[2010-01-17 11:43:37.987] [DEBUG] [default] - Some debug messages\n```\nSee example.js for a full example, but here's a snippet (also in `examples/fromreadme.js`):\n```javascript\nconst log4js = require('log4js');\nlog4js.configure({\n  appenders: { cheese: { type: 'file', filename: 'cheese.log' } },\n  categories: { default: { appenders: ['cheese'], level: 'error' } }\n});\n\nconst logger = log4js.getLogger('cheese');\nlogger.trace('Entering cheese testing');\nlogger.debug('Got cheese.');\nlogger.info('Cheese is Gouda.');\nlogger.warn('Cheese is quite smelly.');\nlogger.error('Cheese is too ripe!');\nlogger.fatal('Cheese was breeding ground for listeria.');\n```\nOutput (in `cheese.log`):\n```bash\n[2010-01-17 11:43:37.987] [ERROR] cheese - Cheese is too ripe!\n[2010-01-17 11:43:37.990] [FATAL] cheese - Cheese was breeding ground for listeria.\n```    \n\n## Note for library makers\n\nIf you're writing a library and would like to include support for log4js, without introducing a dependency headache for your users, take a look at [log4js-api](https://github.com/log4js-node/log4js-api).\n\n## Documentation\nAvailable [here](https://nomiddlename.github.io/log4js-node/).\n\nThere's also [an example application](https://github.com/nomiddlename/log4js-example).\n\n## Contributing\nContributions welcome, but take a look at the [rules](https://github.com/nomiddlename/log4js-node/wiki/Contributing) first.\n\n## License\n\nThe original log4js was distributed under the Apache 2.0 License, and so is this. I've tried to\nkeep the original copyright and author credits in place, except in sections that I have rewritten\nextensively.\n",
  "readmeFilename": "README.md",
  "_id": "log4js@2.3.3",
  "_from": "log4js@"
}
