{
  "name": "hipchat-notifier",
  "version": "1.1.0",
  "description": "Send room notifications to the HipChat v2 API",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "Brice Burgess @iceburgBrice"
  },
  "license": "MIT",
  "dependencies": {
    "lodash": "^4.0.0",
    "request": "^2.0.0"
  },
  "readme": "hipchat-notification\n====================\n\nSend [room notifications](https://www.hipchat.com/docs/apiv2/method/send_room_notification)\nto the [HipChat](https://www.hipchat.com/) v2 API using a [Bearer Token](https://www.hipchat.com/docs/apiv2/auth).\n\n![example output](\n  https://raw.githubusercontent.com/briceburg/hipchat-notifier/master/example/screenshot.png)\n\n\n## Installation\n\n```js\n$ npm install --save hipchat-notification\n```\n\n\n## Usage\n\nTBD, from example.js\n\n```js\n\nvar room=\"devops\";\nvar token=\"token_with_notification_privs\";\n\n// instantiate a hipchat-notifier\nvar hipchat = require('hipchat-notifier').make(room, token);\n\n// the pyramid of doom example, calls to hipchat are serial\nhipchat.notice('this is a .notice()', function(err, response, body){\n  hipchat.info('this is a .info()', function(err, response, body){\n    hipchat.success('this is a .success()', function(err, response, body){\n      hipchat.warning('this is a .warning()', function(err, response, body){\n        hipchat.failure('this is a .failure()', function(err, response, body){\n\n\n          // getters and setters are supported\n          hipchat.setFrom('setter label');\n          hipchat.setNotify(true);\n\n          hipchat.setRoom(room);\n          hipchat.setToken(token);\n          hipchat.setHost('api.hipchat.com');\n\n          // bombs away\n          hipchat.notice('from setter label');\n\n          // support passing an explicit API object, falls back to defaults.\n          // allows sending HipChat cards &c. see:\n          //    https://www.hipchat.com/docs/apiv2/method/send_room_notification\n\n          var body = {\n            from: 'random color label',\n            message: '<p><em>this message</em> is a random color',\n            color: 'random'\n          };\n\n          // bombs away deux!\n          // callbacks are supported as 2nd argument\n          hipchat.send(body, function(err, res, body){\n            if(err) {\n              throw new Error(err);\n            }\n            console.log('finished');\n          });\n        });\n      });\n    });\n  });\n});\n\n```\n",
  "readmeFilename": "README.md",
  "_id": "hipchat-notifier@1.1.0",
  "_from": "hipchat-notifier@^1.1.0"
}
